.container() {
  margin-right: auto;
  margin-left: auto;
  .clearfix();

  @media (min-width: @media_small_min) {
    width: (@media_small_min - @gutter_width);
  }

  @media (min-width: @media_medium_min) {
    width: (@media_medium_min - @gutter_width);
  }

  @media (min-width: @media_large_min) {
    width: (@media_large_min - @gutter_width_large);
  }
}

.row() {
  .clearfix();

  @media (min-width: @media_small_min) {
    margin-left:  (@gutter_width / -2);
    margin-right: (@gutter_width / -2);
  }

  @media (min-width: @media_large_min) {
    margin-left:  (@gutter_width_large / -2);
    margin-right: (@gutter_width_large / -2);
  }
}

.col_width(@num_columns, @orientation: @grid_orientation) {
  width: auto;
  min-height: 1px;

  @media (min-width: @media_small_min) {
    position: relative;
    float: @orientation;
    padding-left:  (@gutter_width / 2);
    padding-right: (@gutter_width / 2);
    width: percentage(@num_columns / @grid_columns);
  }

  @media (min-width: @media_large_min) {
    padding-left:  (@gutter_width_large / 2);
    padding-right: (@gutter_width_large / 2);
  }
}

// Orientation-aware Push & Pull of columns
.col_push(@num_columns) when (@grid_orientation = @ltr) {
  @media (min-width: @media_small_min) {
    left: percentage(@num_columns / @grid_columns);
  }
}

.col_pull(@num_columns) when (@grid_orientation = @ltr) {
  @media (min-width: @media_small_min) {
    right: percentage(@num_columns / @grid_columns);
  }
}


.col_push(@num_columns) when (@grid_orientation = @rtl) {
  @media (min-width: @media_small_min) {
    right: percentage(@num_columns / @grid_columns);
  }
}

.col_pull(@num_columns) when (@grid_orientation = @rtl) {
  @media (min-width: @media_small_min) {
    left: percentage(@num_columns / @grid_columns);
  }
}


